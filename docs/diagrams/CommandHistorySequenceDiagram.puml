@startuml
!include style.puml
skinparam ArrowFontStyle plain

Actor User as user USER_COLOR
Participant ":MainWindow" as mainWindow UI_COLOR
Participant ":CommandBox" as commandBox UI_COLOR_T1
Participant ":Logic" as logic LOGIC_COLOR
Participant ":Model" as model MODEL_COLOR
Participant ":CommandHistory" as commandHistory MODEL_COLOR_T1
Participant ":ResultDisplay" as resultDisplay UI_COLOR_T2

user -> mainWindow : handleUpDownKeyPress(event, commandBox)
activate mainWindow

alt UP key pressed
    mainWindow -> logic : getPreviousCommand()
    activate logic

    logic -> model : getPreviousCommand()
    activate model

    model -> commandHistory : getPreviousCommand()
    activate commandHistory

    commandHistory --> model : previousCommand
    deactivate commandHistory

    model --> logic : previousCommand
    deactivate model

    logic --> mainWindow : command
    deactivate logic

else DOWN key pressed
    mainWindow -> logic : getNextCommand()
    activate logic

    logic -> model : getNextCommand()
    activate model

    model -> commandHistory : getNextCommand()
    activate commandHistory

    commandHistory --> model : nextCommand
    deactivate commandHistory

    model --> logic : nextCommand
    deactivate model

    logic --> mainWindow : command
    deactivate logic
end



mainWindow -> commandBox : setCommandText(command)
activate commandBox
commandBox --> mainWindow
deactivate commandBox

mainWindow -> logic : getCommandHistory()
activate logic

logic -> model : getCommandHistory()
activate model

model -> commandHistory : toString()
activate commandHistory

commandHistory --> model : formattedCommandHistory
deactivate commandHistory

model --> logic : formattedCommandHistory
deactivate model

logic --> mainWindow : formattedCommandHistory
deactivate logic

mainWindow -> resultDisplay : setFeedbackToUser(formattedCommandHistory)
activate resultDisplay
resultDisplay --> mainWindow
deactivate resultDisplay

mainWindow -> mainWindow : event.consume()

mainWindow --> user
deactivate mainWindow

@enduml